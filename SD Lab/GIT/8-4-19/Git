student@T28:~$ git init third
Initialized empty Git repository in /home/student/third/.git/
student@T28:~$ cd third
student@T28:~/third$ gedit sample.txt
^C
student@T28:~/third$ git add sample.txt
student@T28:~/third$ git commit -m 'first commit'
[master (root-commit) 8e52691] first commit
 1 file changed, 7 insertions(+)
 create mode 100644 sample.txt
student@T28:~/third$ git remote add origin https://github.com/meenujohn/Third.git
student@T28:~/third$ git push -u origin master
Username for 'https://github.com': meenujohn
Password for 'https://meenujohn@github.com': 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 324 bytes | 324.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/meenujohn/Third.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.
student@T28:~/third$ git clone
fatal: You must specify a repository to clone.

usage: git clone [<options>] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recurse-submodules[=<pathspec>]
                          initialize submodules in the clone
    -j, --jobs <n>        number of submodules cloned in parallel
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    --reference-if-able <repo>
                          reference repository
    --dissociate          use --reference only while cloning
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --shallow-since <time>
                          create a shallow clone since a specific time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --single-branch       clone only one branch, HEAD or --branch
    --no-tags             don't clone any tags, and make later fetches not to follow them
    --shallow-submodules  any cloned submodules will be shallow
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --filter <args>       object filtering

student@T28:~/third$ git clone third
fatal: repository 'third' does not exist
student@T28:~/third$ git clone first
fatal: repository 'first' does not exist
student@T28:~/third$ git clone second
fatal: repository 'second' does not exist
student@T28:~/third$ git clone fourth
fatal: repository 'fourth' does not exist
student@T28:~/third$ git push -u origin branch1
error: src refspec branch1 does not match any.
error: failed to push some refs to 'https://github.com/meenujohn/Third.git'
student@T28:~/third$ git checkout -u origin branch1
error: unknown switch `u'
usage: git checkout [<options>] <branch>
   or: git checkout [<options>] [<branch>] -- <file>...

    -q, --quiet           suppress progress reporting
    -b <branch>           create and checkout a new branch
    -B <branch>           create/reset and checkout a branch
    -l                    create reflog for new branch
    --detach              detach HEAD at named commit
    -t, --track           set upstream info for new branch
    --orphan <new-branch>
                          new unparented branch
    -2, --ours            checkout our version for unmerged files
    -3, --theirs          checkout their version for unmerged files
    -f, --force           force checkout (throw away local modifications)
    -m, --merge           perform a 3-way merge with the new branch
    --overwrite-ignore    update ignored files (default)
    --conflict <style>    conflict style (merge or diff3)
    -p, --patch           select hunks interactively
    --ignore-skip-worktree-bits
                          do not limit pathspecs to sparse entries only
    --ignore-other-worktrees
                          do not check if another worktree is holding the given ref
    --recurse-submodules[=<checkout>]
                          control recursive updating of submodules
    --progress            force progress reporting

student@T28:~/third$ git checkout -b origin branch1
fatal: 'branch1' is not a commit and a branch 'origin' cannot be created from it
student@T28:~/third$ git checkout -b  branch1
Switched to a new branch 'branch1'
student@T28:~/third$ git push -u origin branch1
Username for 'https://github.com': meenujohn
Password for 'https://meenujohn@github.com': 
Total 0 (delta 0), reused 0 (delta 0)
remote: 
remote: Create a pull request for 'branch1' on GitHub by visiting:
remote:      https://github.com/meenujohn/Third/pull/new/branch1
remote: 
To https://github.com/meenujohn/Third.git
 * [new branch]      branch1 -> branch1
Branch 'branch1' set up to track remote branch 'branch1' from 'origin'.
student@T28:~/third$ git branch -a
* branch1
  master
  remotes/origin/branch1
  remotes/origin/master
student@T28:~/third$ git remote add branch1
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from

student@T28:~/third$ git remote add origin branch1
fatal: remote origin already exists.
student@T28:~/third$ git remote add origin1 branch1
student@T28:~/third$ git push origin1 ^C
student@T28:~/third$ git push origin1 https://github.com/meenujohn/Third.git
fatal: remote part of refspec is not a valid name in https://github.com/meenujohn/Third.git
student@T28:~/third$ git push origin1 https://github.com/meenujohn/Third.git
fatal: remote part of refspec is not a valid name in https://github.com/meenujohn/Third.git
student@T28:~/third$ git push origin https://github.com/meenujohn/Third.git
fatal: remote part of refspec is not a valid name in https://github.com/meenujohn/Third.git
student@T28:~/third$ git push origin https://github.com/meenujohn/Third.git
fatal: remote part of refspec is not a valid name in https://github.com/meenujohn/Third.git
student@T28:~/third$ git fetchorigin1
git: 'fetchorigin1' is not a git command. See 'git --help'.
student@T28:~/third$ git fetch origin1
fatal: 'branch1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
student@T28:~/third$ git fetch origin
student@T28:~/third$ git merge origin1/develop
merge: origin1/develop - not something we can merge
student@T28:~/third$ git merge origin1/origin
merge: origin1/origin - not something we can merge
student@T28:~/third$ git merge origin1/origin^C
student@T28:~/third$ git status
On branch branch1
Your branch is up to date with 'origin/branch1'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   sample.txt

no changes added to commit (use "git add" and/or "git commit -a")
student@T28:~/third$ git add sample.txt
student@T28:~/third$ git commit -m 'second commit'
[branch1 68f517c] second commit
 1 file changed, 1 insertion(+), 1 deletion(-)
student@T28:~/third$ git revert 'sorry'
fatal: bad revision 'sorry'
student@T28:~/third$ git revert 'commit error'
fatal: bad revision 'commit error'
student@T28:~/third$ git fetch origin branch1
From https://github.com/meenujohn/Third
 * branch            branch1    -> FETCH_HEAD
student@T28:~/third$ git merge origin/branch1
Already up to date.
student@T28:~/third$ git pull origin master
From https://github.com/meenujohn/Third
 * branch            master     -> FETCH_HEAD
Already up to date.
student@T28:~/third$ git rebase master
Current branch branch1 is up to date.
student@T28:~/third$ git rebase branch1
Current branch branch1 is up to date.
student@T28:~/third$ git chechout -b branch2
git: 'chechout' is not a git command. See 'git --help'.

The most similar command is
	checkout
student@T28:~/third$ git chechout -b origin1  branch2
git: 'chechout' is not a git command. See 'git --help'.

The most similar command is
	checkout
student@T28:~/third$ git chechout -b origin1 branch2
git: 'chechout' is not a git command. See 'git --help'.

The most similar command is
	checkout
student@T28:~/third$ git chechout -b origin branch2
git: 'chechout' is not a git command. See 'git --help'.

The most similar command is
	checkout
student@T28:~/third$ git checkout -b origin1 branch2
fatal: 'branch2' is not a commit and a branch 'origin1' cannot be created from it
student@T28:~/third$ git clone ^C
student@T28:~/third$ git clone https://github.com/meenujohn/Third.git
Cloning into 'Third'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
student@T28:~/third$ git remote rm ogigin1
fatal: No such remote: ogigin1
student@T28:~/third$ git remote rm origin1
student@T28:~/third$ git log
commit 68f517c1b4165eab2abb6eed2fbf661adac62952 (HEAD -> branch1)
Author: Jilcy123J <jilcyjabraham@mca.ajce.in>
Date:   Mon Apr 8 12:21:56 2019 +0530

    second commit

commit 8e52691d3f37a85dda1708c45dc33d6aabbe733d (origin/master, origin/branch1, master)
Author: Jilcy123J <jilcyjabraham@mca.ajce.in>
Date:   Mon Apr 8 11:34:39 2019 +0530

    first commit
student@T28:~/third$ git diff
student@T28:~/third$ git diff --stat readme sample.txt
error: invalid option: --stat readme
student@T28:~/third$ git diff readme sample.txt
fatal: ambiguous argument 'readme': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
student@T28:~/third$ gedit sample2.txt
student@T28:~/third$ git diff --stat sample.txt sample2.txt
error: invalid option: --stat sample.txt
student@T28:~/third$ git diff  sample.txt sample2.txt
fatal: ambiguous argument ' sample.txt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
student@T28:~/third$ git diff --stat <sample.txt> <sample2.txt>
bash: syntax error near unexpected token `<'
student@T28:~/third$ git revert
usage: git revert [<options>] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add Signed-off-by:
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

student@T28:~/third$ git push origin --delete <master>
bash: syntax error near unexpected token `newline'
student@T28:~/third$ git push origin --delete master
Username for 'https://github.com': meenujohn
Password for 'https://meenujohn@github.com': 
To https://github.com/meenujohn/Third.git
 ! [remote rejected] master (refusing to delete the current branch: refs/heads/master)
error: failed to push some refs to 'https://github.com/meenujohn/Third.git'
student@T28:~/third$ git push origin --delete branch1
Username for 'https://github.com': meenujohn   
Password for 'https://meenujohn@github.com': 
To https://github.com/meenujohn/Third.git
 - [deleted]         branch1
student@T28:~/third$ git branch -d branch1
error: Cannot delete branch 'branch1' checked out at '/home/student/third'
student@T28:~/third$ git branch -d master
Deleted branch master (was 8e52691).
student@T28:~/third$ git branch -d branch2
error: branch 'branch2' not found.
student@T28:~/third$ git branch -a
* branch1
  remotes/origin/master
student@T28:~/third$ git branch -d branch1
error: Cannot delete branch 'branch1' checked out at '/home/student/third'
student@T28:~/third$ git remote remove origin1
fatal: No such remote: origin1
student@T28:~/third$ git remote remove origin
student@T28:~/third$ git log
commit 68f517c1b4165eab2abb6eed2fbf661adac62952 (HEAD -> branch1)
Author: Jilcy123J <jilcyjabraham@mca.ajce.in>
Date:   Mon Apr 8 12:21:56 2019 +0530

    second commit

commit 8e52691d3f37a85dda1708c45dc33d6aabbe733d
Author: Jilcy123J <jilcyjabraham@mca.ajce.in>
Date:   Mon Apr 8 11:34:39 2019 +0530

    first commit
student@T28:~/third$ git revert
usage: git revert [<options>] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add Signed-off-by:
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

student@T28:~/third$ git rebase
There is no tracking information for the current branch.
Please specify which branch you want to rebase against.
See git-rebase(1) for details.

    git rebase <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> branch1

student@T28:~/third$ 

